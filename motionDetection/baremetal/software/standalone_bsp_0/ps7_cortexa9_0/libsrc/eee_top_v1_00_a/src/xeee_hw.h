// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// axi_lite_para
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : reserved
// 0x14 : Data signal of matchcount_V
//        bit 15~0 - matchcount_V[15:0] (Read/Write)
//        others   - reserved
// 0x18 : reserved
// 0x1c : Data signal of faddr_V
//        bit 31~0 - faddr_V[31:0] (Read/Write)
// 0x20 : reserved
// 0x24 : Data signal of vecoutaddr_V
//        bit 31~0 - vecoutaddr_V[31:0] (Read/Write)
// 0x28 : reserved
// 0x2c : Data signal of modeladdr_V
//        bit 31~0 - modeladdr_V[31:0] (Read/Write)
// 0x30 : reserved
// 0x34 : Data signal of modelcount_V
//        bit 15~0 - modelcount_V[15:0] (Read/Write)
//        others   - reserved
// 0x38 : reserved
// 0x3c : Data signal of errthres_V
//        bit 3~0 - errthres_V[3:0] (Read/Write)
//        others  - reserved
// 0x40 : reserved
// 0x44 : Data signal of resultaddr_V
//        bit 31~0 - resultaddr_V[31:0] (Read/Write)
// 0x48 : reserved
// 0x4c : Data signal of mode_V
//        bit 0  - mode_V[0] (Read/Write)
//        others - reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XEEE_AXI_LITE_PARA_ADDR_AP_CTRL           0x00
#define XEEE_AXI_LITE_PARA_ADDR_GIE               0x04
#define XEEE_AXI_LITE_PARA_ADDR_IER               0x08
#define XEEE_AXI_LITE_PARA_ADDR_ISR               0x0c
#define XEEE_AXI_LITE_PARA_ADDR_MATCHCOUNT_V_DATA 0x14
#define XEEE_AXI_LITE_PARA_BITS_MATCHCOUNT_V_DATA 16
#define XEEE_AXI_LITE_PARA_ADDR_FADDR_V_DATA      0x1c
#define XEEE_AXI_LITE_PARA_BITS_FADDR_V_DATA      32
#define XEEE_AXI_LITE_PARA_ADDR_VECOUTADDR_V_DATA 0x24
#define XEEE_AXI_LITE_PARA_BITS_VECOUTADDR_V_DATA 32
#define XEEE_AXI_LITE_PARA_ADDR_MODELADDR_V_DATA  0x2c
#define XEEE_AXI_LITE_PARA_BITS_MODELADDR_V_DATA  32
#define XEEE_AXI_LITE_PARA_ADDR_MODELCOUNT_V_DATA 0x34
#define XEEE_AXI_LITE_PARA_BITS_MODELCOUNT_V_DATA 16
#define XEEE_AXI_LITE_PARA_ADDR_ERRTHRES_V_DATA   0x3c
#define XEEE_AXI_LITE_PARA_BITS_ERRTHRES_V_DATA   4
#define XEEE_AXI_LITE_PARA_ADDR_RESULTADDR_V_DATA 0x44
#define XEEE_AXI_LITE_PARA_BITS_RESULTADDR_V_DATA 32
#define XEEE_AXI_LITE_PARA_ADDR_MODE_V_DATA       0x4c
#define XEEE_AXI_LITE_PARA_BITS_MODE_V_DATA       1

